CREATE DATABASE MyFlyAnalize
USE MyFlyAnalize

ALTER DATABASE MyFlyAnalize COLLATE Cyrillic_General_CI_AS

---CREATE TABLE--

CREATE TABLE COUNTRY(
ID INT PRIMARY KEY IDENTITY(1,1),
NAME VARCHAR(50) NOT NULL,
ABBREVIATION VARCHAR(2) NOT NULL
)

CREATE TABLE CITY(
ID INT PRIMARY KEY IDENTITY(1,1),
NAME VARCHAR(30) NOT NULL,
COUNTRY_ID INT FOREIGN KEY(ID) REFERENCES COUNTRY NOT NULL
)

CREATE TABLE DOCUMENT(
ID INT PRIMARY KEY IDENTITY(1,1),
DOCUMENT_NUMBER VARCHAR(10) NOT NULL,
NATIONALITY_ID INT FOREIGN KEY (ID) REFERENCES COUNTRY NOT NULL,
VALID_UNTIL DATE NOT NULL
)

CREATE TABLE CUSTOMER(
ID INT PRIMARY KEY IDENTITY(1,1),
FIRST_NAME VARCHAR(30) NOT NULL,
LAST_NAME VARCHAR(30) NOT NULL,
PHONE VARCHAR(10) NOT NULL,
EMAIL VARCHAR(100) NOT NULL,
DOCUMENT_ID INT FOREIGN KEY REFERENCES DOCUMENT(ID) NOT NULL,
GENDER CHAR(1) NOT NULL DEFAULT 'M'
        CHECK(GENDER IN('M','F')),
BIRTH_DATE DATE NOT NULL
)

CREATE TABLE AIRPORT(
ID INT PRIMARY KEY IDENTITY(1,1),
NAME VARCHAR(MAX) NOT NULL,
CITY_ID INT FOREIGN KEY REFERENCES CITY(ID) NOT NULL,
TAX NUMERIC(6,2) NOT NULL
)

CREATE TABLE TERMINAL(
ID INT PRIMARY KEY IDENTITY(1,1),
NAME VARCHAR(100) NOT NULL,
AIRPORT_ID INT FOREIGN KEY REFERENCES AIRPORT(ID) NOT NULL
)

CREATE TABLE CARD(
ID INT PRIMARY KEY IDENTITY(1,1),
CARD_NUMBER VARCHAR(16) NOT NULL,
VALIDITY DATE NOT NULL,
CARDHOLDER_FIRST_NAME VARCHAR(30) NOT NULL,
CARDHOLDER_LAST_NAME VARCHAR(30) NOT NULL
)

CREATE TABLE ACCOUNT(
ID INT PRIMARY KEY IDENTITY(1,1),
EMAIL NVARCHAR(MAX) NOT NULL,
PASSWORD VARCHAR(64) NOT NULL,
NAME VARCHAR(MAX) NOT NULL,
PHONE VARCHAR(10) NOT NULL
)

CREATE TABLE PAYER(
ID INT PRIMARY KEY IDENTITY(1,1),
TYPE CHAR(1) NOT NULL DEFAULT 'I'
        CHECK(TYPE IN('I','L')),
ADDRESS VARCHAR(MAX),
CARD_ID INT FOREIGN KEY REFERENCES CARD(ID) NOT NULL,
COUNTRY_ID INT FOREIGN KEY REFERENCES COUNTRY(ID) NOT NULL,
ACCOUNT_ID INT FOREIGN KEY REFERENCES ACCOUNT(ID) NOT NULL
)

CREATE TABLE INSURANCE_COMPANY(
ID INT PRIMARY KEY IDENTITY(1,1),
COMPANY_NUMBER VARCHAR(10) NOT NULL UNIQUE,
NAME VARCHAR(MAX) NOT NULL,
EMAIL VARCHAR(150) NOT NULL,
PHONE VARCHAR(10) NOT NULL,
IBAN VARCHAR(34) NOT NULL
)

CREATE TABLE INSURANCE(
ID INT PRIMARY KEY IDENTITY(1,1),
INS_COMAPNY_ID INT FOREIGN KEY REFERENCES INSURANCE_COMPANY(ID) NOT NULL,
NAME VARCHAR(MAX) NOT NULL,
DESCRIPTION NVARCHAR(MAX),
PRICE NUMERIC(8,2) NOT NULL
)

CREATE TABLE LUGGAGE(
ID INT PRIMARY KEY IDENTITY(1,1),
NAME VARCHAR(150) NOT NULL,
MAX_SIZE_IN_KG INT NOT NULL
)

CREATE TABLE AIRLINE(
ID INT PRIMARY KEY IDENTITY(1,1),
NAME VARCHAR(150) NOT NULL,
AIRLINE_NUMBER VARCHAR(10) NOT NULL
)

CREATE TABLE AIRCRAFT(
ID INT PRIMARY KEY IDENTITY(1,1),
PLANE_NUMBER VARCHAR(15) NOT NULL,
NAME VARCHAR(150) NOT NULL,
AIRLINE_ID INT FOREIGN KEY REFERENCES AIRLINE(ID) NOT NULL,
MAX_PASSENGERS INT NOT NULL

)

CREATE TABLE AIRLINE_LUGGAGE_PRICE(
ID INT PRIMARY KEY IDENTITY(1,1),
LUGGAGE_ID INT FOREIGN KEY REFERENCES LUGGAGE(ID) NOT NULL,
AIRLINE_ID INT FOREIGN KEY REFERENCES AIRLINE(ID) NOT NULL,
PRICE NUMERIC(8,2) NOT NULL
)

CREATE TABLE AMENITIES(
ID INT PRIMARY KEY IDENTITY(1,1),
NAME VARCHAR(150) NOT NULL,
DESCRIPTION NVARCHAR(MAX) NULL
)

CREATE TABLE FLIGHT(
ID INT PRIMARY KEY IDENTITY(1,1),
FILGHT_NUMBER VARCHAR(10) NOT NULL,
AIRCRAFT_ID INT FOREIGN KEY REFERENCES AIRCRAFT(ID) NOT NULL,
PRICE_FOR_KIDS NUMERIC(8,2) NOT NULL,
PRICE_FOR_ADULTS NUMERIC(8,2) NOT NULL,
FROM_AIRPORT INT FOREIGN KEY REFERENCES AIRPORT(ID) NOT NULL,
FROM_TERMINAL INT FOREIGN KEY REFERENCES TERMINAL(ID) NOT NULL,
TO_AIRPORT INT FOREIGN KEY REFERENCES AIRPORT(ID) NOT NULL,
TO_TERMINAL INT FOREIGN KEY REFERENCES TERMINAL(ID) NOT NULL,
DURATION TIME NOT NULL,
TAKES_OFF SMALLDATETIME NOT NULL,
ARRIVE SMALLDATETIME NOT NULL,
)

CREATE TABLE IN_FLIGHT_AMENITIES(
ID INT PRIMARY KEY IDENTITY(1,1),
FLIGHT_ID INT FOREIGN KEY REFERENCES FLIGHT(ID) NOT NULL,
AMENITIES_ID INT FOREIGN KEY REFERENCES AMENITIES(ID) NOT NULL
)

CREATE TABLE RESERVATION(
ID INT PRIMARY KEY IDENTITY(1,1),
CUSTOMER_ID INT FOREIGN KEY REFERENCES CUSTOMER(ID) NOT NULL,
FLIGHT_ID INT FOREIGN KEY REFERENCES FLIGHT(ID) NOT NULL,
PAYER_ID INT FOREIGN KEY REFERENCES PAYER(ID) NOT NULL,
STATUS CHAR(6) NOT NULL DEFAULT 'unpaid' CHECK(STATUS IN('unpaid','paid')),
PRICE NUMERIC(8,2) NOT NULL,
SEAT INT,
TICKET_NUMBER VARCHAR(20) NOT NULL,
DATE_OF_RESERVATION SMALLDATETIME NOT NULL,
CLASS CHAR(1) DEFAULT '1' CHECK( CLASS IN('1','2'))NOT NULL,
INSURANCE_ID INT FOREIGN KEY REFERENCES INSURANCE(ID) NULL,
LUGGAGE_ID INT FOREIGN KEY REFERENCES LUGGAGE(ID) NOT NULL,
PASSENGER_TYPE CHAR(6) NOT NULL DEFAULT 'adult' CHECK(PASSENGER_TYPE IN ('adult','kid'))
)

CREATE TABLE PAYMENTS(
ID INT PRIMARY KEY IDENTITY(1,1),
CARD_ID INT FOREIGN KEY REFERENCES CARD(ID) NOT NULL,
PAYER_ID INT FOREIGN KEY REFERENCES PAYER(ID) NOT NULL,
RESERVATION_ID INT FOREIGN KEY REFERENCES RESERVATION(ID) NOT NULL,
_SUM NUMERIC(8,2) NOT NULL,
DATE DATE NOT NULL
)

--DROP DATABASE MyFlyAnalize
--INSERT DATA---

INSERT INTO COUNTRY VALUES
('Bulgaria','BG'),
('Germany','DE'),
('France','FR'),
('Chech Republic','CZ'),
('Denmark','DK'),
('Croatia','HR'),
('Costa Rica','CR'),
('China','CN'),
('Canada','CA'),
('Belgium','BE'),
('Bahamas','BS'),
('Austria','AT'),
('Armenia','AM'),
('Argentina','AR'),
('Antarctica','AQ'),
('Anguilla','AI'),
('Andorra','AD'),
('American Samoa','AS'),
('Algeria','DZ'),
('Albania','AL'),
('Aland Islands','AX'),
('Afghanistan','AF'),
('United Kingdom','UK'),
('Singapore','SG'),
('Netherlands','NL')

INSERT INTO CITY VALUES
('Sofia',1),
('Plovdiv',1),
('Varna',1),
('Burgas',1),
('Kabul',22),
('Herat',22),
('Augsburg',2),
('Berlin',2),
('Bremen',2),
('Düsseldorf',2),
('Stuttgart',2),
('Aars',5),
('Herning',5),
('Odense',5),
('Nice',3),
('Avord',3),
('Vidin',1),
('Ruse',1),
('Rinas',20),
('Liberia',7),
('Buenos Aires',7)

INSERT INTO DOCUMENT VALUES
('0845312672',2,'2023-10-20'),
('7256113540',22,'2021-05-01'),
('0945161230',3,'2024-12-19'),
('7826872179',5,'2025-01-11'),
('1456511237',1,'2024-03-07'),
('9055631827',1,'2023-11-24'),
('1928374651',1,'2027-07-31'),
('2875640428',5,'2025-08-29'),
('1378063452',2,'2024-07-15'),
('1768112542',4,'2025-08-29'),
('0875463214',5,'2026-09-03')

INSERT INTO CUSTOMER VALUES
('Ivan','Petrov','0894655432','ivan_petrov@abv.bg',7,'M','1987-12-09'),
('Antoine','Blanchet','3275604312','anntoine@yahoo.com',3,'F','1999-06-04'),
('Monica','Georgieva','0873415648','georgieva@gmail.com',5,'F','2007-02-24'),
('Alexandar','Stoyanov','0882561847','sashoo04@abv.bg',6,'M','1995-07-01'),
('Ahmad','Ghani','2765432111','ag@yahoo.com',2,'M','2000-08-17'),
('Mia','Hoffmann','3572411834','hoffman@gmail.com',1,'F','1985-12-12'),
('Wyatt', 'Burch','9747624114','donec.est@aol.edu',4,'M','1981-03-02'),
('Zelenia', 'Chen','5774091307','justo.sit@google.com',8,'F','1994-09-29'),
('Raya', 'Donaldson','1434718470','odio.a@aol.com',9,'F','1984-02-06'),
('Odysseus','Nielsen','1637151541','amet@yahoo.edu',10,'M','2004-10-06'),
('Moses', 'Michael','1515229133','cras.interdum.nunc@icloud.couk',11,'M','04-08-1995')

INSERT INTO AIRPORT VALUES
('Sofia Airport',1,150),
('Burgas Airport',4,78.40),
('Plovdiv Airport',2,93),
('Düsseldorf Airport',10,36.80),
('Stuttgart Airport',11,64.2),
('Kabul International Airport',5,128),
('Herat International Airport',6,87.45),
('Daniel Oduber Quirós International Airport',20,105.99)

INSERT INTO TERMINAL VALUES
('T1',1),
('T2',1),
('T2',2),
('T1',3),
('T1',4),
('T2',4),
('T3',4),
('T1',5),
('T4',5),
('T2',5),
('T3',5),
('T1',6),
('T2',6),
('T(D)',7),
('T(F)',8)

INSERT INTO CARD VALUES
('5333619503715702','2024-05-31','Ivan','Petrov'),
('5333619503715702','2025-12-31','Raya','Donaldson'),
('5333619503715702','2023-11-30','Alexandar','Stoyanov'),
('5333619503715702','2024-01-31','Derek','Branc'),
('5333619503715702','2027-08-31','Mia','Schneider'),
('5333619503715702','2026-03-31','Yuli','Rose'),
('5333619503715702','2026-02-28','Antoine','Blanchet'),
('5333619503715702','2024-11-30','Zelenia','Chen'),
('5333619503715702','2025-09-30','Sydnee','Potts'),
('5333619503715702','2025-04-30','Laura','Hester')

INSERT INTO ACCOUNT VALUES
('posuere@protonmail.com','12345','Alexis Moore','1874270186'),
('fermentum.risus.at@yahoo.edu','abcdefg','Kadeem Cummings','1733275601'),
('metus.in.lorem@protonmail.net','asdasas','Carson Koch','6002355381'),
('nullam.ut@aol.edu','qewqeqew','Kelsey Church','6598724255'),
('tempus.lorem@yahoo.com','poqwpqwqpo','Amity Warner','1454747476'),
('tincidunt.orci@protonmail.com','424242','Ursa Simon','7444171085'),
('mauris@icloud.ca','rwrwerwwq','Zenaida Kirby','6681237183'),
('imperdiet@yahoo.com','itrtqre','Maggie Reyes','6614864354'),
('nam.porttitor.scelerisque@google.net','barron','Bruno Barron','1825473438'),
('ut.lacus.nulla@google.ca','oliverr','Oliver Kerr','1343523757')

INSERT INTO PAYER VALUES
('L','bul. Macedonia 56',1,1,1),
('I','2580 Libero Rd.',10,4,2),
('I','8128 A, Avenue',9,11,3),
('I','9593 Ac, Avenue',4,22,4),
('L','b241-1312 Massa. Rd.',2,2,5),
('I','674-5255 Scelerisque St.',3,3,6),
('L','Ap #542-8193 Ultricies Ave',5,6,7),
('I','882-7156 Nunc Road',6,5,8)

INSERT INTO INSURANCE_COMPANY VALUES
('2110374364','Protect','faucibus@icloud.edu','6457334031','PL49702531416642825488265918'),
('5781695934','Surety','mauris@hotmail.net','2675155375','PT25890523006321317821355'),
('5812123P07','Safety Care Agency','ac.urna@icloud.ca','4194771210','MT96FEEQ40732641131326891162362'),
('6972129820','Defend And Insure','malesuada.fames@icloud.net','1831633642','SI65718178116239159'),
('1322561230','Insure And Defend','mi.lorem@outlook.edu','9132123722','CZ4688031262262245994824'),
('3574976541','Reliable Coverage','mollis@hotmail.edu','7188306144','HR4851871834661956411'),
('2025418614','Safety First Solution','est.mollis@protonmail.com','6164070521','CY15416472814667339848556618'),
('9905106751','Safety Guard Group','ridiculus.mus.proin@aol.edu','6264844265','LU586465466304081598'),
('8566521386','Cover And Protect','eget@protonmail.ca','4658573486','MR4835531528427435152814321'),
('3471367856','Protector','ultricies.dignissim.lacus@outlook.org','1975852427','NL68YPZY1709688715')

INSERT INTO INSURANCE VALUES
(1, 'Medical care','Calling doctor. Treatment due to injury',4.72),
(2, 'All Risk','Flight delay over 4 hours. Standart loss of baggage. Calling doctor. Amount of compensation in case of an accident',32.50),
(1, 'Flight Delay','Flight delay over 4 hours.',8.60),
(2, 'Medical care','Calling doctor. Treatment due to injury. Emergency dental care',5.30),
(3, 'COVID-19','Coverage of the diagnosis of COVID-19. Coverage of treatment for COVID-19. Medical care',8)

INSERT INTO LUGGAGE VALUES
('30K',30),
('10K',10),
('8K',8),
('15K',15)

INSERT INTO AIRLINE VALUES
('Turkish Airlines','1345689218'),
('Lufthansa','4532883291'),
('Austrian','9825624720'),
('Aegean','7324362919'),
('Wizz Air','4294234823'),
('SAS','4323021462')

INSERT INTO AIRCRAFT VALUES
('458093154830383','ATR72',1,80),
('784636686700673','AirbusA319',2,100),
('922549249668106','Embraer190',1,120),
('548120228828315','AirbusA320',5,100),
('277810748340012','Embraer185',2,100),
('875633092813548','CanadairRegionalJet900',5,140)

INSERT INTO AIRLINE_LUGGAGE_PRICE VALUES
(1,1,150),
(2,1,0),
(3,1,0),
(1,2,127),
(4,2,95),
(3,5,0),
(4,5,87),
(1,5,165)

INSERT INTO AMENITIES VALUES
('Complimentary Snacks',' We offer: sandwiches, chips, pasta, coffee, tea and etc.'),
('In-flight Entertainment','Movies, music, TV shows, video games'),
('On-Board Wi-Fi',null),
('Complimentary Alcohol',null)

INSERT INTO FLIGHT VALUES
('7437911596',2,107,125,3,4,4,6,'04:30','2023-10-29 15:00','2023-10-29 16:30'),
('1356790854',1,156,182.8,1,2,8,15,'06:15','2023-11-13 10:00','2023-11-13 16:15'),
('1435255232',1,180,212,1,2,5,9,'02:00','2023-11-07 06:00','2023-11-07 08:0'),

('5639901294',1,84,103.50,3,4,4,6,'04:55','2023-10-31 12:00','2023-10-31 16:55'),
('4528369480',2,17,38,1,2,6,12,'09:00','2023-11-08 21:20','2023-11-09 06:20'),
('3536193773',3,204,264,1,2,5,9,'02:15','2024-02-14 11:00','2024-02-14 13:15'),
('8485419316',4,605,632,2,3,8,15,'12:20','2023-12-07 13:30','2023-12-08 01:50'),
('9571831167',5,124,175.23,3,4,6,13,'08:30','2023-11-26 04:30','2023-11-26 13:00'),
('3615568576',6,196.98,342,7,14,8,15,'05:40','2024-01-17 14:00','2024-01-17 19:40')

INSERT INTO IN_FLIGHT_AMENITIES VALUES
(1,3), (2,1),(2,2),(2,3),(2,4),(3,4),(4,1),(4,2),(4,3)

select* from flight
--ticket number=flight_number+ fime_of_reservation+ seat_number
INSERT INTO RESERVATION VALUES
(4,3,4,'unpaid',264,27,'35361937732710125727','2023-10-27 12:57','2',null,1,'adult'),



(1,2,1,'paid',38,1,'45283694802709214701','2023-09-27 21:47','2',null,2,'adult'),
(3,2,1,'paid',17,2,'45283694802709214702','2023-08-06 11:28','2',null,2,'kid'),
(2,1,2,'unpaid',286,7,'56399012942910143107','2023-10-29 14:31','1',2,1,'adult'),
(11,2,3,'unpaid',61,18,'45283694801910110418','2023-10-19 11:04','1',5,4,'adult')
--(1,2,1,'paid',38,1,'45283694802709214701','2023-09-27 21:47','2',null,2,'adult')-5- deleted -trigger

INSERT INTO PAYMENTS VALUES
(1,1,1,38,'2023-09-27 21:47'),
(1,1,2,17,'2023-08-06 11:28')




select a.NAME,count(f.from_airport) as airport_count
from flight f, AIRPORT a
where f.from_airport=a.id
group by a.NAME, a.id

ALTER TABLE CUSTOMER ADD PAYER_ID INT FOREIGN KEY REFERENCES PAYER(ID) 

UPDATE CUSTOMER 
SET 
PAYER_ID=4
WHERE ID=4
UPDATE CUSTOMER 
SET 
PAYER_ID=1
WHERE ID=3
UPDATE CUSTOMER 
SET 
PAYER_ID=1
WHERE ID=1
UPDATE CUSTOMER 
SET 
PAYER_ID=2
WHERE ID=2
UPDATE CUSTOMER 
SET 
PAYER_ID=3
WHERE ID=11

---PROCEDURE---

 --which airline offers min price for adults for flights form AIRPORT_A to AIRPORT_B
CREATE PROCEDURE MIN_PRICE_A_TO_B (@A_ID int, @B_ID int)
AS BEGIN
SELECT a.NAME AS AIRLINE_NAME, MIN(f.PRICE_FOR_ADULTS) AS MIN_PRICE_FOR_ADULTS
FROM
AIRLINE a
JOIN AIRCRAFT p
ON a.ID =p.AIRLINE_ID
JOIN FLIGHT f
ON f.AIRCRAFT_ID=p.ID
WHERE f.FROM_AIRPORT=@A_ID AND f.TO_AIRPORT=@B_ID
GROUP BY a.ID,a.NAME
END
EXECUTE MIN_PRICE_A_TO_B @A_ID=3, @B_ID=4;


CREATE PROCEDURE COUNT_OF_FLIGHTS_FROM_AIRPORT(@AIRPORT_NAME VARCHAR(150))
AS BEGIN
SELECT a.Name AS AIRPORT_NAME, COUNT(f.FROM_AIRPORT) AS COUNT_OF_FLIGHTS
FROM AIRPORT a, FLIGHT f
where a.ID=f.FROM_AIRPORT and a.NAME LIKE '%'+@AIRPORT_NAME+'%'
group by a.NAME,a.ID
END
EXECUTE COUNT_OF_FLIGHTS_FROM_AIRPORT @AIRPORT_NAME='Sofia';


CREATE PROCEDURE AVG_PRICE(@A_ID int, @B_ID int, @MIN_PRICE numeric(8,2),@Max_PRICE numeric(8,2))
AS BEGIN
SELECT a.NAME AS FROM_AIRPORT, ar.NAME AS TO_AIRPORT,f.PRICE_FOR_ADULTS as PRICE_FOR_ADULTS, f.PRICE_FOR_KIDS as PRICE_FOR_KIDS
FROM AIRPORT ar
JOIN FLIGHT f ON ar.ID = f.TO_AIRPORT
JOIN AIRPORT a ON a.ID = f.FROM_AIRPORT
where f.FROM_AIRPORT=@A_ID and f.TO_AIRPORT=@B_ID 
and f.PRICE_FOR_ADULTS between @MIN_PRICE and @Max_PRICE 
or f.PRICE_FOR_ADULTS between @MIN_PRICE and @Max_PRICE 
END;
DROP PROCEDURE AVG_PRICE
EXECUTE AVG_PRICE @A_ID=1, @B_ID=2,@MIN_PRICE=12,@Max_PRICE=150;








---TRIGGER---

CREATE TABLE RESERVATION_HISTORY(
ID INT PRIMARY KEY IDENTITY(1,1),
RES_ID INT NOT NULL,
CUSTOMER_ID INT FOREIGN KEY REFERENCES CUSTOMER(ID) NOT NULL,
FLIGHT_ID INT FOREIGN KEY REFERENCES FLIGHT(ID) NOT NULL,
PAYER_ID INT FOREIGN KEY REFERENCES PAYER(ID) NOT NULL,
STATUS CHAR(6) NOT NULL DEFAULT 'unpaid' CHECK(STATUS IN('unpaid','paid')),
PRICE NUMERIC(8,2) NOT NULL,
SEAT INT,
TICKET_NUMBER VARCHAR(20) NOT NULL,
DATE_OF_RESERVATION SMALLDATETIME NOT NULL,
CLASS CHAR(1) DEFAULT '1' CHECK( CLASS IN('1','2'))NOT NULL,
INSURANCE_ID INT FOREIGN KEY REFERENCES INSURANCE(ID) NULL,
LUGGAGE_ID INT FOREIGN KEY REFERENCES LUGGAGE(ID) NOT NULL,
PASSENGER_TYPE CHAR(6) NOT NULL DEFAULT 'adult' CHECK(PASSENGER_TYPE IN ('adult','kid'))
)

drop table RESERVATION_HISTORY

CREATE TRIGGER TRIGGER_SAVE_DELETED_RECORDS
ON RESERVATION
AFTER DELETE
AS
BEGIN
    SET NOCOUNT ON;
    INSERT INTO RESERVATION_HISTORY
	(RES_ID,CUSTOMER_ID, FLIGHT_ID,PAYER_ID,STATUS,PRICE,SEAT,TICKET_NUMBER,DATE_OF_RESERVATION,
									CLASS,INSURANCE_ID,LUGGAGE_ID,PASSENGER_TYPE)

    SELECT ID,CUSTOMER_ID, FLIGHT_ID,PAYER_ID,STATUS,PRICE,SEAT,TICKET_NUMBER,DATE_OF_RESERVATION,
									CLASS,INSURANCE_ID,LUGGAGE_ID,PASSENGER_TYPE
    FROM deleted;
	END;
	delete from RESERVATION where ID=5
	select* from RESERVATION_HISTORY
	
CREATE TRIGGER T_GET_ALL_INFO_FOR_RESERVATION
ON RESERVATION
AFTER INSERT
AS 
BEGIN
	SET NOCOUNT ON;
	SELECT CONCAT(c.FIRST_NAME,' ',c.LAST_NAME )AS CUSTOMER_NAME,
	f.FILGHT_NUMBER,a.NAME AS FROM_AIRPORT,
	ar.NAME AS TO_AIRPORT,acc.NAME AS PAYER_NAME,
	STATUS, r.PRICE AS PRICE,SEAT,
	r.DATE_OF_RESERVATION,CLASS,
	i.NAME,l.name,lp.price as PRICE_FOR_LUGGAGE
	FROM
    RESERVATION r
JOIN CUSTOMER c ON r.CUSTOMER_ID = c.ID
JOIN PAYER p ON r.PAYER_ID = p.ID
JOIN ACCOUNT acc ON p.ACCOUNT_ID = acc.ID
JOIN FLIGHT f ON r.FLIGHT_ID = f.ID
JOIN INSURANCE i ON r.INSURANCE_ID = i.ID
JOIN AIRPORT a ON f.FROM_AIRPORT = a.ID
JOIN AIRPORT ar ON f.TO_AIRPORT = ar.ID
JOIN AIRLINE_LUGGAGE_PRICE lp ON r.LUGGAGE_ID = lp.LUGGAGE_ID
JOIN LUGGAGE l on lp.LUGGAGE_ID=l.ID

	END;


	




---FUNCTION---
CREATE FUNCTION FLIGHTS_PER_PERSON(@CUSTOMER_ID AS int)
RETURNS INT
AS
BEGIN
 DECLARE @flights_per_person int = 0;
 SELECT @flights_per_person =  COUNT(f.ID) 
 FROM Flight f
 join RESERVATION r
 on r.FLIGHT_ID=f.ID
 WHERE r.CUSTOMER_ID = @CUSTOMER_ID
 RETURN(@flights_per_person)
 END;
 --or just calculate reservations

 --12=0- for test
DECLARE @result INT;
SET @result = dbo.FLIGHTS_PER_PERSON(1);
SELECT @result AS Result;


 --reservation for flight
CREATE FUNCTION RESERVATION_FOR_FLIGHT(@FLIGHT_ID AS int)
RETURNS INT
AS
BEGIN
 DECLARE @COUNTS int=0;
 SELECT @COUNTS=COUNT(r.id)
 FROM RESERVATION r
-- join FLIGHT f on r.FLIGHT_ID=f.ID
where r.FLIGHT_ID=@FLIGHT_ID
 RETURN(@COUNTS)
 END;

 --1=1; 2=3 -test
DECLARE @result_2 INT;
SET @result_2 = dbo.RESERVATION_FOR_FLIGHT(2);
SELECT @result_2 AS Result;


 --CALC THE NUMBER OF DEPARTURES FROM AN AIRPORT
CREATE FUNCTION COUNT_FLIGHTS(@AIRPORT_ID AS int)
RETURNS INT
AS BEGIN
	DECLARE @COUNTS int=0;
	SELECT @COUNTS=COUNT(f.FROM_AIRPORT)
	FROM FLIGHT f
	where f.FROM_AIRPORT=@AIRPORT_ID
	RETURN(@COUNTS)
	END;

DECLARE @result_3 INT;
SET @result_3 = dbo.COUNT_FLIGHTS(1);
SELECT @result_3 AS Result;